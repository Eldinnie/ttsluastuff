MIN_VALUE = -999
MAX_VALUE = 999
FONT_COLOR = {1,1,1,95}
TOOLTIP_SHOW = true

function onload(saved_data)
    FONT_COLOR = {1,1,1,95}
    TOOLTIP_SHOW = true
    val = 0

    if saved_data ~= "" then
        local loaded_data = JSON.decode(saved_data)
        FONT_COLOR = loaded_data[1]
        val = loaded_data[2]
        TOOLTIP_SHOW = loaded_data[3]
    end

    createAll()
end

function updateSave()
    local data_to_save = {FONT_COLOR, val, TOOLTIP_SHOW}
    saved_data = JSON.encode(data_to_save)
    self.script_state = saved_data
end

function createAll()
    if TOOLTIP_SHOW then
        ttText = self.getName().. ": " .. val
    else
        ttText = self.getName()
    end

    thickness = self.getBoundsNormalized().size.y

    self.createButton({
      label=tostring(val),
      click_function="add_subtract",
      tooltip=ttText,
      function_owner=self,
      position={0, thickness/2, -0.2},
      height=600,
      width=1000,
      alignment = 3,
      scale={x=1.5, y=1.5, z=1.5},
      font_size=600,
      font_color=FONT_COLOR,
      color={0,0,0,0}
      })

    self.createInput({
        value = self.getName(),
        input_function = "editName",
        tooltip=ttText,
        label = "Counter",
        function_owner = self,
        alignment = 3,
        position = {0,thickness/2,1.7},
        width = 1200,
        height = 1000,
        font_size = 200,
        scale={x=1, y=1, z=1},
        font_color= FONT_COLOR,
        color = {0,0,0,0}
        })

    setTooltips()
end

function editName(_obj, _string, value)
    self.setName(value)
    setTooltips()
end

function add_subtract(_obj, _color, alt_click)
    mod = alt_click and -1 or 1
    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)
    if val ~= new_value then
        val = new_value
        updateVal()
        updateSave()
    end
end

function updateVal()
    if TOOLTIP_SHOW then
        ttText = self.getName().. ": " .. val
    else
        ttText = self.getName()
    end

    self.editButton({
        index = 0,
        label = tostring(val),
        tooltip = ttText
        })
end

function setTooltips()
    if TOOLTIP_SHOW then
        ttText = self.getName().. ": " .. val
    else
        ttText = self.getName()
    end

    self.editInput({
        index = 0,
        value = self.getName(),
        tooltip = ttText
        })
    self.editButton({
        index = 0,
        value = tostring(val),
        tooltip = ttText
        })
end
