
STAT_URL = ""
ID = false
DEBUG = false

function loadStats(save_state, stat_url, initial_wait, interval, debug)
    STAT_URL = stat_url
    local initial_wait = initial_wait or 600
    local interval = interval or 120
    if debug then DEBUG=debug end

    local state = JSON.decode(save_state)
    if state and state ~= "" then
        if DEBUG then log("Found save state") end
        if state.ID then
            if DEBUG then log("found ID "..state.ID.." in save state") end
            ID = state.ID
        else
            if DEBUG then log("no ID found in save_state. Registering new session") end
        end
    end
    if not ID then
        if DEBUG then log("No ID so setting timer to request new one.") end
        function get_id()
            WebRequest.post(STAT_URL, {moment="start", num_players=#getSeatedPlayers(), delay=initial_wait}, save_id)
        end
        Wait.time(get_id, initial_wait)
        Wait.time(ping, interval, -1)
    else
        if DEBUG then log("Session already started (rewinded?) only setting interval") end
        Wait.time(ping, interval, -1)
    end
end

function l(w)
    if DEBUG then log(w.text) end
end

function ping()
    if DEBUG then log("Pinging stats.") end
    WebRequest.post(STAT_URL, {moment="ping", id=ID, num_players=#getSeatedPlayers()}, l)
end

function save_id(w)
    if DEBUG then log("Received ID.") end
    if DEBUG then log(w.text) end
    current_save = JSON.decode(self.script_state)
    if not current_save then current_save={} end
    ret = JSON.decode(w.text)
    ID = ret.id
    current_save["ID"] = ID
    if DEBUG then log(current_save) end
    self.script_state = JSON.encode(current_save)
end

function onSave()
    return self.script_state
end
